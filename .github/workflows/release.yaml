name: Publish Release

on:
  # Allow manual triggering of the workflow
  workflow_dispatch:
    inputs:
      version:
        description: "The version of the release (e.g., 1.0.0)"
        required: true

permissions:
  contents: write
  # Required for PyO3/maturin-action@v1
  id-token: write

jobs:
  release:
    name: Release SlateDB
    runs-on: ubuntu-latest

    steps:
      # Verify the version is a valid SemVer version
      - name: Verify version
        id: semver
        uses: matt-usurp/validate-semver@v2
        with:
          version: ${{ github.event.inputs.version }}

      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.RELEASE_SSH_KEY }}
          ref: ${{ github.ref }}

      # Set up Rust stable
      - name: Install cargo-edit
        run: cargo install cargo-edit

      # Set Cargo.toml version using cargo-edit
      - name: Set version
        run: cargo set-version ${{ github.event.inputs.version }}

      # Set pyproject.toml version
      - name: Set Python package version
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" slatedb-py/pyproject.toml

      # Commit changes
      - name: Commit version bump
        uses: EndBug/add-and-commit@v9
        with:
          message: "Bump version to ${{ github.event.inputs.version }}"
          push: true

      # Publish a git release that creates a new "vX.Y.Z" release tag and includes generated notes
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # Publish the crate to crates.io
      - name: Publish SlateDB to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        working-directory: slatedb
        run: |
          if cargo add slatedb@${{ github.event.inputs.version }} --dry-run >/dev/null 2>&1; then
            echo "✔ slate v${{ github.event.inputs.version }} already published, skipping"
          else
            cargo publish
          fi

      - name: Publish SlateDB CLI to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        working-directory: slatedb-cli
        run:  |
          if cargo add slatedb-cli@${{ github.event.inputs.version }} --dry-run >/dev/null 2>&1; then
            echo "✔ slate-cli v${{ github.event.inputs.version }} already published, skipping"
          else
            cargo publish
          fi

      - name: Publish website
        uses: ./.github/workflows/release-website.yaml
