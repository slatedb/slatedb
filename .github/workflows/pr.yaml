name: PR Checks

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

# Make sure CI fails on all warnings, including Clippy lints
env:
  RUSTFLAGS: "-Dwarnings"

permissions:
  # Required for PR comments
  pull-requests: write
  # Required for storing benchmark results
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: cargo install cargo-hack
        run: cargo +stable install cargo-hack --locked
      - name: cargo check
        run: cargo hack check --each-feature --no-dev-deps --workspace

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: cargo install cargo-hack
        run: cargo +stable install cargo-hack --locked
      - name: cargo clippy
        run: |
          cargo hack clippy --each-feature --no-dev-deps --workspace &&
          cargo hack clippy --workspace --tests

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: cargo fmt
        run: cargo fmt -- --check

  typos:
    runs-on: ubuntu-latest
    name: typos
    steps:
      - uses: actions/checkout@v4
      - name: Check spelling
        uses: crate-ci/typos@v1
        with:
          files: |
            rfcs
            website

  flatbuffers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install specific version of flatc (24.3.25)
      - name: Install flatc
        run: |
          wget https://github.com/google/flatbuffers/releases/download/v24.3.25/Linux.flatc.binary.g++-13.zip
          unzip Linux.flatc.binary.g++-13.zip
          sudo mv flatc /usr/local/bin/

      # Check for differences
      - name: Generate and validate files
        run: |
          flatc -o tmp/generated --rust --gen-all schemas/manifest.fbs
          if ! diff -r slatedb/src/generated/*.rs tmp/generated; then
            echo "Generated files do not match!"
            exit 1
          fi

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.98
      - name: Install gdb
        run: |
          sudo apt-get update
          sudo apt-get install -y gdb
      - name: Run Tests
        run: cargo nextest run --workspace --all-features --profile ci
      - name: Run Doc Tests
        run: cargo test --doc --all-features
      - name: Run DST Tests
        run: cargo nextest run -p slatedb-dst --all-features --profile dst
        env:
          RUSTFLAGS: "--cfg dst --cfg tokio_unstable"

  tests-cross:
    name: tests (cross)
    needs: tests
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.98
      - name: Run Tests
        run: cargo nextest run --workspace --all-features
      - name: Run Doc Tests
        run: cargo test --doc --all-features

  bindings-python:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install maturin
        run: pip install maturin

      - name: Build and install package with test dependencies
        working-directory: ./slatedb-py
        run: |
          python -m venv .venv
          source .venv/bin/activate
          maturin develop
          pip install -e .[test]

      - name: Run Python tests
        working-directory: ./slatedb-py
        run: |
          source .venv/bin/activate
          pytest -xvs

  bindings-go:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go 1.24.x
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Install build dependencies for CGO
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config

      - name: Build Rust FFI library for Go bindings
        run: cargo build --release -p slatedb-go

      - name: Run Go tests (slatedb-go)
        working-directory: ./slatedb-go/go
        env:
          CGO_ENABLED: '1'
          CGO_LDFLAGS: "-L${{ github.workspace }}/target/release"
          LD_LIBRARY_PATH: "${{ github.workspace }}/target/release:${LD_LIBRARY_PATH}"
        run: go test -v ./...

  microbenchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run benchmark
        run: cargo bench -- --output-format bencher | tee output.txt

      - name: Download nightly benchmark data
        uses: actions/cache/restore@v4
        with:
          path: ./microbenchmarks-cache
          key: ${{ runner.os }}-microbenchmarks

      - name: Update benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: cargo bench
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          external-data-json-path: ./microbenchmarks-cache/benchmark-data.json
          comment-on-alert: true
          summary-always: true
          max-items-in-chart: 30

  test_website:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get changed files
        id: changed-website-files
        uses: tj-actions/changed-files@6cb76d07bee4c9772c6882c06c37837bf82a04d3 # v46
        with:
          files: website/**

      - name: Build website
        shell: bash
        if: steps.changed-website-files.outputs.any_changed == 'true'
        working-directory: ./website
        run: |
          npm install
          npm run build
